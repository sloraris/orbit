---
- name: Initialize Primary Swarm Manager
  hosts: apollo_control[0]
  become: true
  tasks:
    - name: Ensure Docker is installed on manager
      ansible.builtin.package:
        name: docker-ce
        state: present

    - name: Ensure python3-docker is installed
      ansible.builtin.package:
        name: python3-docker
        state: present

    - name: Initialize/update Docker Swarm
      community.docker.docker_swarm:
        state: present
        name: default
        labels:
          swarm.name: apollo
          node.name: "{{ inventory_hostname }}"
          node.role: manager
        advertise_addr: "{{ ansible_default_ipv4.address }}"
      register: swarm_info

- name: Join Additional Managers to Swarm
  hosts: apollo_control[1:]
  become: true
  tasks:
    - name: Ensure python3-docker is installed
      ansible.builtin.package:
        name: python3-docker
        state: present

    - name: Join the swarm as a manager
      community.docker.docker_swarm:
        state: join
        labels:
          node.name: "{{ inventory_hostname }}"
          node.role: manager
        join_token: "{{ hostvars[groups['apollo_control'][0]].swarm_info.swarm_facts.JoinTokens.Manager }}"
        remote_addrs: "{{ hostvars[groups['apollo_control'][0]].ansible_default_ipv4.address }}"

- name: Join worker nodes to the swarm
  hosts: apollo_cluster
  become: true
  tasks:
    - name: Ensure python3-docker is installed
      ansible.builtin.package:
        name: python3-docker
        state: present

    - name: Join the swarm as a worker
      community.docker.docker_swarm:
        state: join
        labels:
          node.name: "{{ inventory_hostname }}"
          node.role: worker
        join_token: "{{ hostvars[groups['apollo_control'][0]].swarm_info.swarm_facts.JoinTokens.Worker }}"
        remote_addrs: "{{ hostvars[groups['apollo_control'][0]].ansible_default_ipv4.address }}"
